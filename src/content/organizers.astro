---
import type { MarkdownInstance } from "astro";
import PersonCard from "../components/PersonCard.astro";
import type { Organizer, Person, PersonalDetails } from "../data/types";
import { getPersonIdFromFilePath } from "../utils";

const organizers = await Astro.glob<Person>("../data/organizers/*.md");

const getOrganizerInfo = (
  organizerMd: MarkdownInstance<PersonalDetails>
): Organizer => {
  const orgId = getPersonIdFromFilePath(organizerMd.file);

  return {
    type: "organizer",
    id: orgId,
    bio: organizerMd.frontmatter,
    BioMdContent: organizerMd.Content,
  };
};
---

<div class="content center">
  <h2>Meet the team</h2>
</div>

<ul role="list" class="organizers-list">
  {
    organizers.map((o) => (
      <>
        <li class="organizers-list-item">
          <PersonCard variant="small" person={getOrganizerInfo(o)} />
        </li>
      </>
    ))
  }
</ul>

<style>
  .organizers-list {
    display: flex;
    flex-wrap: wrap;
    align-item: center;
    justify-content: center;
    gap: 2rem;
    padding: 2rem 0;
  }

  .organizers-list-item {
    list-style: none;
    padding-bottom: 1rem;
  }

  .organizers-list-item:nth-child(3n) {
    --person-accent-color: var(--color-accent-pink);
  }

  .organizers-list-item:nth-child(3n + 1) {
    --person-accent-color: var(--color-accent-orange);
  }

  .organizers-list-item:nth-child(3n + 2) {
    --person-accent-color: var(--color-accent-green);
  }
</style>
